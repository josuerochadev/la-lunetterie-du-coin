# .github/workflows/visual-regression.yml
name: üì∏ Visual Regression Tests

on:
  push:
    branches: [dev, main]
  pull_request:
    branches: [dev, main]
  # Permettre l'ex√©cution manuelle
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write

env:
  NODE_VERSION: '20'

jobs:
  visual-tests:
    name: üì∏ Visual Regression
    runs-on: ubuntu-latest
    timeout-minutes: 20
    
    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4
        
      - name: üì¶ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          
      - name: üì¶ Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          run_install: false
          
      - name: üìã Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: üèóÔ∏è Build project
        run: pnpm build
        
      - name: üé≠ Install Playwright browsers
        run: pnpm exec playwright install --with-deps chromium
        
      - name: üì∏ Run visual regression tests
        run: pnpm e2e:visual
        
      - name: üìä Upload visual test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: visual-test-results
          path: |
            test-results/
            e2e-results/
          retention-days: 30
          
      - name: üì∏ Upload screenshots on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: screenshot-diffs
          path: |
            test-results/**/*-diff.png
            test-results/**/*-actual.png
            test-results/**/*-expected.png
          retention-days: 30
          
      - name: üí¨ Comment PR with visual changes
        if: github.event_name == 'pull_request' && failure()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            
            // Chercher les fichiers de diff√©rences
            const testResultsDir = './test-results';
            let hasDiffs = false;
            let diffFiles = [];
            
            if (fs.existsSync(testResultsDir)) {
              const findDiffs = (dir) => {
                const files = fs.readdirSync(dir);
                for (const file of files) {
                  const fullPath = path.join(dir, file);
                  if (fs.statSync(fullPath).isDirectory()) {
                    findDiffs(fullPath);
                  } else if (file.endsWith('-diff.png')) {
                    hasDiffs = true;
                    diffFiles.push(fullPath);
                  }
                }
              };
              
              findDiffs(testResultsDir);
            }
            
            if (hasDiffs) {
              const comment = `
            ## üì∏ Visual Regression Test Failures
            
            Des diff√©rences visuelles ont √©t√© d√©tect√©es dans cette PR.
            
            **Fichiers avec diff√©rences:** ${diffFiles.length}
            
            üîç **Comment r√©soudre:**
            1. V√©rifiez les diff√©rences dans les artifacts de ce build
            2. Si les changements sont intentionnels, ex√©cutez \`npm run e2e:visual:update\` localement
            3. Committez les nouveaux screenshots de r√©f√©rence
            
            üìé Les screenshots de comparaison sont disponibles dans les artifacts de cette ex√©cution.
            `;
            
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            }